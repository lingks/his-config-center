
#logback配置
logging.config=classpath:logback.xml

#数据库设置
datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.0.10:3306/his?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=Y6B5cNewgQRf/9fVqqIqWkhMMT9vw1gknvZ3sYiBpp/9INBXQnAhF0QMTCuyffI2mPI18r9HXYEkbS0idtH0lw==
spring.datasource.privateKey=MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAoT1gEyC4Wu0H9ArsCpuptybZpbjoT7zoGsUuploHyT5Gta985M1gv24DiamFLBz37DOhL430/TqWaqxNIHdOMwIDAQABAkAOCxZvFA56fOKQctMUKXKirROPx4cUStO8YSgq/PRopoyC/UZnM+Gmq9q2eUmXCmXNnYORnWhZ+j60k1UJ32vhAiEA0H2GlNkPSXwBCGNPnDkEO38ETEb2LE8tgnety1oJYN8CIQDF+3F/+Vdv81jTk/aFXo5iAnleopWK/qnXL7fub5SZLQIhAJwIBWtqUwWE12UGpfLdvOwl7/qB9QROMVn95URV2sTzAiEAm42n68jY7ljgnbxPoRJeBJu1CKntnTvh7fTMK0b4FjECIGECgqaX9+4QvxfmXN4IBnIDelG8AuNgF0mRKvFb+dWh
spring.datasource.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKE9YBMguFrtB/QK7Aqbqbcm2aW46E+86BrFLqZaB8k+RrWvfOTNYL9uA4mphSwc9+wzoS+N9P06lmqsTSB3TjMCAwEAAQ==
#--------------------------
#  lhspvisiiiaebifh
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j,config
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=config.decrypt=true;config.decrypt.key=${spring.datasource.publicKey};druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

spring.application.name=his-search

server.port=9985

host.url=http://192.168.0.11
server.contextPath=/api

eureka.client.serviceUrl.defaultZone=${host.url}:1111/eureka/

mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.his.search.domain

spring.redis.database=0
spring.redis.host=${host.url}
spring.redis.port=6389
spring.redis.password=a1234567@!
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=1000
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.timeout=0

feign.httpclient.enabled=true

management.security.enabled=false
feign.hystirs.enable=true

oauth2.server-host=${host.url}:7777/uaa/api

security.oauth2.resource.id=res_apptem
security.oauth2.resource.clientId=$2a$10$XOVs4Z1YtPKqKwQVywG9j.xLAqXYRQLGZMGMrZDNbtl6pUC0Weteq
security.oauth2.resource.clientSecret=$2a$10$XOVs4Z1YtPKqKwQVywG9j.xLAqXYRQLGZMGMrZDNbtl6pUC0Weteq
security.oauth2.resource.tokenInfoUri=${oauth2.server-host}/oauth/check_token/
security.oauth2.resource.userInfoUri=${oauth2.server-host}/user
security.oauth2.resource.prefer-token-info=false


practice.oauth2.client.id=${security.oauth2.resource.id}
practice.oauth2.client.accessTokenUrl=${oauth2.server-host}/oauth/token
practice.oauth2.client.clientId=${security.oauth2.resource.clientId}
practice.oauth2.client.clientSecret=${security.oauth2.resource.clientSecret}
practice.oauth2.client.clientAuthenticationScheme=header

logging.level.org.springframework.security=DEBUG

#Ribbon的负载均衡策略
ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
ribbon.MaxAutoRetriesNextServer=0


userService.ribbon.listOfServers=${host.url}:7777/uaa

foundationService.ribbon.listOfServers=${host.url}:7777/foundation

#fastdfs
connect_timeout = 2
network_timeout = 30
charset = ISO8859-1
http.tracker_http_port = 8080
http.anti_steal_token = no
http.secret_key = FastDFS1234567890
tracker_server =192.168.0.11:22122
storaged.server = http://192.168.0.11
storaged.group = group1
upload.url=${storaged.server}:${http.tracker_http_port}/${storaged.group}/

#elasticsearch
elasticsearch.cluster.name=es_cloud
elasticsearch.cluster.ip=192.168.0.11
elasticsearch.cluster.port=9300
elasticsearch.cluster.index=attachments
elasticsearch.cluster.type=attachment
